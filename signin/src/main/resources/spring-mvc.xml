<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:component-scan base-package="com.ssm"
		use-default-filters="false">
		<!-- 指定扫描的注解 -->
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 使用指定的验证器 -->
	<mvc:annotation-driven></mvc:annotation-driven>

	<mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
	<mvc:resources location="/media/" mapping="/media/**"></mvc:resources>
	<mvc:resources location="/" mapping="/**"></mvc:resources>

	<!-- <mvc:interceptors>
		<mvc:interceptor>
			匹配的是url路径， 如果不配置或/**,将拦截所有的请求，如果web.xml中配置了/,拦截的资源包括Controller、静态资源等
			<mvc:mapping path="/*.html" />
			排除某些不需要拦截的资源
			<mvc:exclude-mapping path="/media/**" />
			<mvc:exclude-mapping path="/login.html" />
			指定自定义拦截器
			<bean class="com.ssm.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors> -->

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor"
		class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- 生成代理，通过代理进行控制 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<!-- 开启Shiro注解,必须放在springmvc的配置文件中 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- 注解方式下的异常处理，身份认证异常处理、权限认证异常处理 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthenticatedException">/loginin.html</prop>
				<prop key="org.apache.shiro.authz.UnauthorizedException">/error.html</prop>
			</props>
		</property>
	</bean>
	
	<mvc:annotation-driven>
  <!-- 处理json里的日期数据，默认日期被fastjson转为时间戳数据 -->
  	<mvc:message-converters>  
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
                <property name="objectMapper">  
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">  
                        <property name="dateFormat">  
                            <bean class="java.text.SimpleDateFormat">  
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
                            </bean>  
                        </property>  
                    </bean>  
                </property>  
            </bean>  
        </mvc:message-converters>
  </mvc:annotation-driven>
</beans>